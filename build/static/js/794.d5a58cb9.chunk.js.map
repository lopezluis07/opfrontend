{"version":3,"file":"static/js/794.d5a58cb9.chunk.js","mappings":"kLAMOA,eAAeC,IAClB,IAEI,MAAMC,EAAQC,aAAaC,QAAQ,SAU7BC,SAPiBC,EAAAA,EAAMC,IAAI,2CAA4C,CACzEC,QAAS,CACLC,cAAe,UAAUP,QAKXG,KAAKK,KAAKC,IAAG,CAC/B,cAAeA,EAAIC,GAEnB,QAAWD,EAAIE,QACT,GAAGF,EAAIE,QAAQC,UAAUH,EAAIE,QAAQE,WACrC,cACN,aAAWJ,EAAIK,KACf,MAASL,EAAIM,MACb,cAAeN,EAAIO,YACnB,WAAYP,EAAIQ,SAChB,qBAAsBR,EAAIS,mBAC1B,kBAAmBT,EAAIU,gBACvB,qBAAsBV,EAAIW,mBAC1B,cAAiBX,EAAIY,cACrB,UAAaZ,EAAIa,cAIfC,EAAYC,EAAAA,GAAWC,cAActB,GACrCuB,EAAWF,EAAAA,GAAWG,WAC5BH,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,aAGlDC,EAAAA,GAAeE,EAAU,8BAGzBG,EAAAA,GAAaC,QAAQ,CACjBC,QAAS,yBACTC,YAAa,oBAAoB7B,EAAK8B,oBACtCC,UAAW,YAEnB,CAAE,MAAOC,GAAQ,IAADC,EACZC,QAAQF,MAAM,2BAA4BA,GAC1CN,EAAAA,GAAaM,MAAM,CACfJ,QAAS,0BACTC,aAA2B,QAAdI,EAAAD,EAAMG,gBAAQ,IAAAF,OAAA,EAAdA,EAAgBjC,OAAQgC,EAAMJ,QAC3CG,UAAW,YAEnB,CACJ,C","sources":["components/DriverExportExcel.js"],"sourcesContent":["// DriverExportExcel.js\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { notification } from \"antd\";\r\n\r\n\r\nexport async function exportAllRecordsToExcel() {\r\n    try {\r\n        // 1. Tomar el token para autenticar la solicitud\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        // 2. Hacer la solicitud al backend\r\n        const response = await axios.get(\"http://192.168.1.99:3001/api/conductores\", {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        // 3. Convertir la data para Excel\r\n        const data = response.data.map((rec) => ({\r\n            \"ID Registro\": rec.id,\r\n            // Nombre completo en vez de usuario_id\r\n            \"Usuario\": rec.Usuario\r\n                ? `${rec.Usuario.nombre} ${rec.Usuario.apellido}`\r\n                : \"Desconocido\",\r\n            \"Sección\": rec.zona,\r\n            \"Fecha\": rec.fecha,\r\n            \"Hora Inicio\": rec.hora_inicio,\r\n            \"Hora Fin\": rec.hora_fin,\r\n            \"Kilometraje Inicio\": rec.kilometraje_inicio,\r\n            \"Kilometraje Fin\": rec.kilometraje_fin,\r\n            \"Cantidad Entregada\": rec.cantidad_entregada,\r\n            \"Observaciones\": rec.observaciones,\r\n            \"Actividad\": rec.actividad,\r\n        }));\r\n\r\n        // 4. Crear la hoja y el libro\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, \"Registros\");\r\n\r\n        // 5. Guardar el archivo\r\n        XLSX.writeFile(workbook, `Registros_Conductores.xlsx`);\r\n\r\n        // Opcional: notificación de éxito\r\n        notification.success({\r\n            message: \"Exportación Exitosa\",\r\n            description: `Se han exportado ${data.length} registros.`,\r\n            placement: \"topRight\",\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al exportar Excel:\", error);\r\n        notification.error({\r\n            message: \"Error al exportar Excel\",\r\n            description: error.response?.data || error.message,\r\n            placement: \"topRight\",\r\n        });\r\n    }\r\n}\r\n"],"names":["async","exportAllRecordsToExcel","token","localStorage","getItem","data","axios","get","headers","Authorization","map","rec","id","Usuario","nombre","apellido","zona","fecha","hora_inicio","hora_fin","kilometraje_inicio","kilometraje_fin","cantidad_entregada","observaciones","actividad","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","notification","success","message","description","length","placement","error","_error$response","console","response"],"sourceRoot":""}